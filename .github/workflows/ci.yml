name: CI for Autotools/Linux

on:
  push:
    paths-ignore:
      - "**/CMakeLists.txt"
      - "**.cmake"
      - "**.cmake.in"
      - ".github/workflows/ci.yml"
  pull_request:

jobs:

  linux-multi:
    runs-on: ubuntu-latest
    name: Autotools build on Linux
    steps:
    - name: Install system dependencies
      run: |
        sudo apt-get update -yq
        sudo apt-get install -yq --no-install-recommends \
            zlib1g-dev libmpich-dev mpich
    - name: Checkout source code
      uses: actions/checkout@v2
    - name: Run bootstrap script
      run: ./bootstrap
    - name: Make check with MPI and debug, without shared
      shell: bash
      run: |
        DIR="checkMPIdebug_shared" && mkdir -p "$DIR" && cd "$DIR"
        ../configure --enable-mpi --enable-debug --disable-shared \
            CFLAGS="-O0 -g -Wall -Wextra -Wno-unused-parameter"
        make -j V=0
        make -j check V=0
        cd ..
    - name: Make check with MPI, without debug
      shell: bash
      run: |
        DIR="checkMPI" && mkdir -p "$DIR" && cd "$DIR"
        ../configure --enable-mpi CFLAGS="-O2"
        make -j V=0
        make -j check V=0
        cd ..
    - name: Make check without MPI, with debug
      shell: bash
      run: |
        DIR="checkdebug" && mkdir -p "$DIR" && cd "$DIR"
        ../configure --enable-debug CFLAGS="-O0 -g -Wall -Wno-uninitialized"
        make -j V=0
        make -j check V=0
        cd ..
    - name: Make check with MPI, debug and C++ compiler
      shell: bash
      run: |
        DIR="checkMPIdebugCXX" && mkdir -p "$DIR" && cd "$DIR"
        ../configure --enable-mpi --enable-debug CFLAGS="-O0" CC=mpicxx
        make -j V=0
        make -j check V=0
        cd ..
    - name: Make check with OpenMP, MPI, debug
      shell: bash
      run: |
        DIR="checkOpenMPMPIdebug" && mkdir -p "$DIR" && cd "$DIR"
        ../configure --enable-openmp="-fopenmp" --enable-mpi \
            --enable-debug CFLAGS="-O0"
        make -j V=0
        make -j check V=0
        cd ..
    - name: Make distcheck
      shell: bash
      run: |
        DIR="distcheck" && mkdir -p "$DIR" && cd "$DIR"
        ../configure
        make -j distcheck V=0
        cd ..
    - name: Save test suite log
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test_suite_log
        path: ./**/test-suite.log

    - name: Upload config.log on configure script failure
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: configure log
        path: |
          ./**/config.log
          ./**/test-suite.log

  linux-tarball:
    runs-on: ubuntu-latest
    name: Pack tarball on Linux
    steps:
    - name: Install system dependencies
      run: |
        sudo apt-get update -yq
        sudo apt-get install -yq --no-install-recommends \
            zlib1g-dev libmpich-dev mpich
    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Identify version
      shell: bash
      run: |
        git tag
        git describe --abbrev=4 --match 'v*'
    - name: Run bootstrap script
      run: ./bootstrap
    - name: Configure and make
      shell: bash
      run: |
        DIR="tarball" && mkdir -p "$DIR" && cd "$DIR"
        ../configure --enable-mpi --enable-debug \
            CFLAGS="-O0 -g -pedantic -Wall -Wextra -Werror \
                -Wno-unused-parameter -Wno-builtin-declaration-mismatch \
                -Wno-implicit-fallthrough"
        make -j V=0
        make -j check V=0
        make -j distcheck V=0
        mv libsc-*.tar.gz ..
        cd ..
    - name: Save tarball
      uses: actions/upload-artifact@v2
      with:
        name: libsc_tarball
        path: ./libsc-*.tar.gz

    - name: Upload config.log on configure script failure
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: configure log
        path: ./tarball/config.log

    - name: Upload test-suite.log on test failure
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: test-suite log
        path: ./tarball/test-suite.log
