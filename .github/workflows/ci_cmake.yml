name: CI for CMake

on:
  push:
    paths:
      - "**/CMakeLists.txt"
      - "**.cmake"
      - "**.cmake.in"
      - "**.c"
      - "**.h"
      - "**.h.in"
      - ".github/workflows/ci_cmake.yml"
  pull_request:

jobs:

  linux:
    runs-on: ubuntu-20.04
    name: CMake build on Linux
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v2
      name: Checkout source code

    - name: Install system dependencies
      run: |
        sudo apt-get update -yq
        sudo apt-get install -yq --no-install-recommends \
            ninja-build libopenmpi-dev openmpi-bin

    - name: CMake configure
      run: cmake --preset=default -DCMAKE_INSTALL_PREFIX=~/libsc

    - name: CMake build
      run: cmake --build build

    - name: CMake install (for examples)
      run: cmake --install build

    - name: CMake self-tests
      run: ctest --parallel 2 --output-on-failure
      working-directory: build

    - name: CMake configure examples
      run: cmake -B example/build -S example -DSC_ROOT=~/libsc

    - name: CMake build examples
      run: cmake --build example/build

    - name: CMake test examples
      run: ctest --parallel 2 --output-on-failure
      working-directory: example/build

  mac:
    runs-on: macos-latest
    name: CMake build on MacOS
    timeout-minutes: 10
    env:
      HOMEBREW_NO_INSTALL_CLEANUP: 1

    steps:
    - uses: actions/checkout@v2
      name: Checkout source code

    - name: Install system dependencies
      run: brew install open-mpi ninja

    - name: CMake configure
      run: cmake --preset=mac -DCMAKE_INSTALL_PREFIX=~/libsc

    - name: CMake build
      run: cmake --build build

    - name: CMake install (for examples)
      run: cmake --install build

    - name: CMake self-tests
      run: ctest -E sort --parallel 2 --output-on-failure
      working-directory: build

    - name: CMake configure examples
      run: cmake -B example/build -S example -DSC_ROOT=~/libsc

    - name: CMake build examples
      run: cmake --build example/build

    - name: CMake test examples
      run: ctest --parallel 2 --output-on-failure
      working-directory: example/build

  windows:
    runs-on: windows-latest
    name: CMake build on Windows
    timeout-minutes: 10

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          git
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-ninja
          mingw-w64-x86_64-msmpi

    - name: Put MSYS2_MinGW64 on PATH
      # there is not yet an environment variable for this path from msys2/setup-msys2
      run: echo "D:/a/_temp/msys/msys64/mingw64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: download MS-MPI setup (SDK is from MSYS2)
      run: curl -L -O https://github.com/microsoft/Microsoft-MPI/releases/download/v10.1.1/msmpisetup.exe

    - name: Install mpiexec.exe (-force needed to bypass GUI on headless)
      run: .\msmpisetup.exe -unattend -force

    - name: test that mpiexec.exe exists
      # can't use MSMPI_BIN as Actions doesn't update PATH fro mmsmpisetup.exe
      run: Test-Path "C:\Program Files\Microsoft MPI\Bin\mpiexec.exe" -PathType leaf

    - name: put MSMPI_BIN on PATH (where mpiexec is)
      run: echo "C:\Program Files\Microsoft MPI\Bin\" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - uses: actions/checkout@v2
      name: Checkout source code

    - name: CMake configure
      run: cmake --preset=default

    - name: CMake build
      run: cmake --build build

    - name: CMake self-tests
      run: ctest --parallel 2 --output-on-failure
      working-directory: build
