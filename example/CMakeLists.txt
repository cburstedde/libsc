cmake_minimum_required(VERSION 3.13...3.24)
project(libscExamples LANGUAGES C)

include(CTest)
include(CheckSymbolExists)
include(CheckIncludeFile)

option(mpi "use MPI" off)

# --- find external libraries
list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../cmake/Modules)

if(mpi)
  find_package(MPI COMPONENTS C REQUIRED)
  if(NOT MPIEXEC_EXECUTABLE)
    message(FATAL_ERROR "MPIEXEC not found")
  endif()
endif(mpi)

find_package(ZLIB REQUIRED)
find_package(Threads)

# --- find our library

find_package(SC QUIET)
set(cfg_h ${SC_INCLUDE_DIRS}/sc_config.h)

# --- get system capabilities

check_symbol_exists(sqrt math.h SC_NONEED_M)
if(NOT SC_NONEED_M)
  set(CMAKE_REQUIRED_LIBRARIES m)
  check_symbol_exists(sqrt math.h SC_NEED_M)
endif()

check_symbol_exists(SC_HAVE_UNISTD_H ${cfg_h} SC_HAVE_UNISTD_H)
check_symbol_exists(SC_HAVE_GETOPT_H ${cfg_h} SC_HAVE_GETOPT_H)
check_symbol_exists(SC_ENABLE_V4L2 ${cfg_h} SC_ENABLE_V4L2)

target_link_libraries(SC::SC INTERFACE
$<$<BOOL:${MPI_C_FOUND}>:MPI::MPI_C>
$<$<BOOL:${ZLIB_FOUND}>:ZLIB::ZLIB>
$<$<BOOL:${SC_NEED_M}>:m>
)

# --- build examples

function(test_sc_example name files)

add_executable(sc_${name} ${files})

target_link_libraries(sc_${name} PRIVATE SC::SC)

endfunction(test_sc_example)


test_sc_example(function function/function.c)
test_sc_example(logging logging/logging.c)
test_sc_example(test_shmem testing/sc_test_shmem.c)

if(SC_HAVE_GETOPT_H)
  test_sc_example(options options/options.c)
endif()

if(OpenMP_FOUND)
  test_sc_example(openmp openmp/openmp.c)
  target_link_libraries(sc_openmp PRIVATE OpenMP::OpenMP_C)
endif()

if(Threads_FOUND)
  check_include_file(pthread.h HAS_PTHREAD)
  if(HAS_PTHREAD)
    test_sc_example(pthread pthread/pthread.c)
    target_link_libraries(sc_pthread PRIVATE Threads::Threads)
  endif()
endif()

if(SC_ENABLE_V4L2)
  test_sc_example(v4l2 v4l2/v4l2.c)
endif()
